map "http://hl7.org/fhir/StructureMap/List4to3" = "R4 to R3 Conversion for List"

uses "http://hl7.org/fhir/StructureDefinition/List" alias List as source
uses "http://hl7.org/fhir/3.0/StructureDefinition/List" alias ListR3 as target

imports "http://hl7.org/fhir/StructureMap/*4to3"

group List(source src : ListR3, target tgt : List) extends DomainResource <<type+>> {
  src.identifier as vs -> tgt.identifier as vt then Identifier(vs, vt);
  src.status as vs -> tgt.status as vt then code(vs, vt);
  src.mode as vs -> tgt.mode as vt then string(vs, vt);
  src.title as vs -> tgt.title as vt then string(vs, vt);
  src.code as vs -> tgt.code as vt then CodeableConcept(vs, vt);
  src.subject as vs -> tgt.subject as vt then Reference(vs, vt);
  src.encounter as vs -> tgt.encounter as vt then Reference(vs, vt);
  src.date as vs -> tgt.date as vt then dateTime(vs, vt);
  src.source as vs -> tgt.source as vt then string(vs, vt);
  src.orderedBy as vs -> tgt.orderedBy as vt then string(vs, vt);
  src.note as vs -> tgt.note as vt then Annotation(vs, vt);
  src.entry as s -> tgt.entry as t then entry(s, t);
  src.emptyReason as vs -> tgt.emptyReason as vt then string(vs, vt);
}

group entry(source src, target tgt) extends BackboneElement {
  src.flag as vs -> tgt.flag as vt then string(vs, vt);
  src.deleted as vs -> tgt.deleted as vt then string(vs, vt);
  src.date as vs -> tgt.date as vt then dateTime(vs, vt);
  src.item as vs -> tgt.item as vt then string(vs, vt);
}

