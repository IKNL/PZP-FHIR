map "http://hl7.org/fhir/StructureMap/Measure4to3" = "R4 to R3 Conversion for Measure"

uses "http://hl7.org/fhir/StructureDefinition/Measure" alias Measure as source
uses "http://hl7.org/fhir/3.0/StructureDefinition/Measure" alias MeasureR3 as target

imports "http://hl7.org/fhir/StructureMap/*4to3"

group Measure(source src : MeasureR3, target tgt : Measure) extends DomainResource <<type+>> {
  src.url as vs -> tgt.url as vt then uri(vs, vt);
  src.identifier as vs -> tgt.identifier as vt then Identifier(vs, vt);
  src.version as vs -> tgt.version as vt then string(vs, vt);
  src.name as vs -> tgt.name as vt then string(vs, vt);
  src.title as vs -> tgt.title as vt then string(vs, vt);
  src.status as vs -> tgt.status as vt then code(vs, vt);
  src.experimental as vs -> tgt.experimental as vt then boolean(vs, vt);
  src.date as vs -> tgt.date as vt then dateTime(vs, vt);
  src.publisher as vs -> tgt.publisher as vt then string(vs, vt);
  src.contact -> tgt.contact;
  src.description as vs -> tgt.description as vt then markdown(vs, vt);
  src.useContext as vs -> tgt.useContext as vt then string(vs, vt);
  src.jurisdiction as vs -> tgt.jurisdiction as vt then string(vs, vt);
  src.purpose as vs -> tgt.purpose as vt then markdown(vs, vt);
  src.usage as vs -> tgt.usage as vt then string(vs, vt);
  src.copyright as vs -> tgt.copyright as vt then markdown(vs, vt);
  src.approvalDate as vs -> tgt.approvalDate as vt then string(vs, vt);
  src.lastReviewDate as vs -> tgt.lastReviewDate as vt then string(vs, vt);
  src.effectivePeriod as vs -> tgt.effectivePeriod as vt then string(vs, vt);
  src.topic as vs -> tgt.topic as vt then string(vs, vt);
  src.author as vs ->  tgt.contributor as vt,  vt.type = 'author' then Contributor(vs, vt);
  src.editor as vs ->  tgt.contributor as vt,  vt.type = 'editor',  vt.contact = vs;
  src.reviewer as vs ->  tgt.contributor as vt,  vt.type = 'reviewer',  vt.contact = vs;
  src.endorser as vs ->  tgt.contributor as vt,  vt.type = 'endorser',  vt.contact = vs;
  src.relatedArtifact as vs -> tgt.relatedArtifact as vt then string(vs, vt);
  src.library as vs -> tgt.library as vt then string(vs, vt);
  src.disclaimer as vs -> tgt.disclaimer as vt then string(vs, vt);
  src.scoring as vs -> tgt.scoring as vt then string(vs, vt);
  src.compositeScoring as vs -> tgt.compositeScoring as vt then string(vs, vt);
  src.type as vs -> tgt.type as vt then string(vs, vt);
  src.riskAdjustment as vs -> tgt.riskAdjustment as vt then string(vs, vt);
  src.rateAggregation as vs -> tgt.rateAggregation as vt then string(vs, vt);
  src.rationale as vs -> tgt.rationale as vt then string(vs, vt);
  src.clinicalRecommendationStatement as vs -> tgt.clinicalRecommendationStatement as vt then string(vs, vt);
  src.improvementNotation as cc then {
    cc.text -> tgt.improvementNotation;
  };
  src.definition as vs -> tgt.definition as vt then string(vs, vt);
  src.guidance as vs -> tgt.guidance as vt then string(vs, vt);
  src.extension as e where url = 'http://hl7.org/fhir/3.0/StructureDefinition/extension-Measure.set' then {
    e.value -> tgt.set;
  };
  src.group as s -> tgt.group as t then group(s, t);
  src.supplementalData as s -> tgt.supplementalData as t then supplementalData(s, t);
}

group group(source src, target tgt) extends BackboneElement {
  src.code as vs -> tgt.identifier as vt then Codeable2Identifier(vs, vt);
  src.extension as e where url = 'http://hl7.org/fhir/3.0/StructureDefinition/extension-Measure.group.name' then {
    e.value -> tgt.name;
  };
  src.description as vs -> tgt.description as vt then markdown(vs, vt);
  src.population as s -> tgt.population as t then population(s, t);
  src.stratifier as s -> tgt.stratifier as t then stratifier(s, t);
}

group population(source src, target tgt) extends BackboneElement {
  src.extension as e where url = 'http://hl7.org/fhir/3.0/StructureDefinition/extension-Measure.group.population.identifier' then {
    e.value -> tgt.identifier;
  };
  src.code as vs -> tgt.code as vt then CodeableConcept(vs, vt);
  src.extension as e where url = 'http://hl7.org/fhir/3.0/StructureDefinition/extension-Measure.group.population.name' then {
    e.value -> tgt.name;
  };
  src.description as vs -> tgt.description as vt then markdown(vs, vt);
  src.criteria as s then {
    s.expression -> tgt.criteria;
  };
}

group stratifier(source src, target tgt) extends BackboneElement {
  src.code as vs -> tgt.identifier as vt then Codeable2Identifier(vs, vt);
  src.criteria as s then {
    s.expression -> tgt.criteria;
  };
  src.extension as e where url = 'http://hl7.org/fhir/3.0/StructureDefinition/extension-Measure.group.stratifier.path' then {
    e.value -> tgt.path;
  };
}

group supplementalData(source src, target tgt) extends BackboneElement {
  src.code as vs -> tgt.identifier as vt then Codeable2Identifier(vs, vt);
  src.usage as vs -> tgt.usage as vt then string(vs, vt);
  src.description as vs -> tgt.description as vt then markdown(vs, vt);
  src.criteria as s then {
    s.expression -> tgt.criteria;
  };
  src.extension as e where url = 'http://hl7.org/fhir/3.0/StructureDefinition/extension-Measure.supplementalData.path' then {
    e.value -> tgt.path;
  };
}

