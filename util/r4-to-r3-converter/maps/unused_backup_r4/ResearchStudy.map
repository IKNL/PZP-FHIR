map "http://hl7.org/fhir/StructureMap/ResearchStudy4to3" = "R4 to R3 Conversion for ResearchStudy"

conceptmap "ResourceStudyStatus" {
  prefix s = "http://hl7.org/fhir/research-study-status"
  prefix t = "http://hl7.org/fhir/research-study-status"

  s:active - t:"in-progress"
  s:"administratively-completed" - t:completed
  s:approved - t:"in-progress"
  s:"closed-to-accrual" - t:suspended
  s:"closed-to-accrual-and-intervention" - t:suspended
  s:completed - t:completed
  s:disapproved - t:stopped
  s:"in-review" - t:draft
  s:"temporarily-closed-to-accrual" - t:suspended
  s:"temporarily-closed-to-accrual-and-intervention" - t:suspended
  s:withdrawn - t:stopped
}

uses "http://hl7.org/fhir/StructureDefinition/ResearchStudy" alias ResearchStudy as source
uses "http://hl7.org/fhir/3.0/StructureDefinition/ResearchStudy" alias ResearchStudyR3 as target

imports "http://hl7.org/fhir/StructureMap/*4to3"

group ResearchStudy(source src : ResearchStudyR3, target tgt : ResearchStudy) extends DomainResource <<type+>> {
  src.identifier as vs -> tgt.identifier as vt then Identifier(vs, vt);
  src.title as vs -> tgt.title as vt then string(vs, vt);
  src.protocol as vs -> tgt.protocol as vt then string(vs, vt);
  src.partOf as vs -> tgt.partOf as vt then string(vs, vt);
  src.status as v -> tgt.status = translate(v, '#ResourceStudyStatus', 'code');
  src.category as vs -> tgt.category as vt then CodeableConcept(vs, vt);
  src.focus as vs -> tgt.focus as vt then string(vs, vt);
  src.contact -> tgt.contact;
  src.relatedArtifact as vs -> tgt.relatedArtifact as vt then string(vs, vt);
  src.keyword as vs -> tgt.keyword as vt then string(vs, vt);
  src.location as vs -> tgt.location as vt then string(vs, vt);
  src.extension as e where url = 'http://hl7.org/fhir/3.0/StructureDefinition/extension-ResearchStudy.jurisdiction' then {
    e.value -> tgt.jurisdiction;
  };
  src.description as vs -> tgt.description as vt then markdown(vs, vt);
  src.enrollment as vs -> tgt.enrollment as vt then string(vs, vt);
  src.period as vs -> tgt.period as vt then string(vs, vt);
  src.sponsor as vs -> tgt.sponsor as vt then string(vs, vt);
  src.principalInvestigator as vs -> tgt.principalInvestigator as vt then string(vs, vt);
  src.site as vs -> tgt.site as vt then string(vs, vt);
  src.reasonStopped as vs -> tgt.reasonStopped as vt then string(vs, vt);
  src.note as vs -> tgt.note as vt then Annotation(vs, vt);
  src.arm as s -> tgt.arm as t then arm(s, t);
}

group arm(source src, target tgt) extends BackboneElement {
  src.name as vs -> tgt.name as vt then string(vs, vt);
  src.type -> tgt.code;
  src.description as vs -> tgt.description as vt then markdown(vs, vt);
}

