map "http://hl7.org/fhir/StructureMap/SpecimenDefinition4to3" = "R4 to R3 Conversion for SpecimenDefinition"

uses "http://hl7.org/fhir/StructureDefinition/SpecimenDefinition" alias SpecimenDefinition as source
uses "http://hl7.org/fhir/3.0/StructureDefinition/SpecimenDefinition" alias SpecimenDefinitionR3 as target

imports "http://hl7.org/fhir/StructureMap/*4to3"

group SpecimenDefinition(source src : SpecimenDefinitionR3, target tgt : SpecimenDefinition) extends DomainResource <<type+>> {
  src.identifier as vs -> tgt.identifier as vt then Identifier(vs, vt);
  src.typeCollected as vs -> tgt.typeCollected as vt then string(vs, vt);
  src.patientPreparation as vs -> tgt.patientPreparation as vt then string(vs, vt);
  src.timeAspect as vs -> tgt.timeAspect as vt then string(vs, vt);
  src.collection as vs -> tgt.collection as vt then string(vs, vt);
  src.specimenToLab as s -> tgt.specimenToLab as t then SpecimenDefinitionSpecimenToLab(s, t);
}

group SpecimenDefinitionSpecimenToLab(source src, target tgt) extends BackboneElement {
  src.isDerived as vs -> tgt.isDerived as vt then string(vs, vt);
  src.type as vs -> tgt.type as vt then string(vs, vt);
  src.preference as vs -> tgt.preference as vt then string(vs, vt);
  src.containerMaterial as vs -> tgt.containerMaterial as vt then string(vs, vt);
  src.containerType as vs -> tgt.containerType as vt then string(vs, vt);
  src.containerCap as vs -> tgt.containerCap as vt then string(vs, vt);
  src.containerDescription as vs -> tgt.containerDescription as vt then string(vs, vt);
  src.containerCapacity as vs -> tgt.containerCapacity as vt then string(vs, vt);
  src.containerMinimumVolume as vs -> tgt.containerMinimumVolume as vt then string(vs, vt);
  src.containerAdditive as s -> tgt.containerAdditive as t then SpecimenDefinitionSpecimenToLabContainerAdditive(s, t);
  src.containerPreparation as vs -> tgt.containerPreparation as vt then string(vs, vt);
  src.requirement as vs -> tgt.requirement as vt then string(vs, vt);
  src.retentionTime as vs -> tgt.retentionTime as vt then string(vs, vt);
  src.rejectionCriterion as vs -> tgt.rejectionCriterion as vt then string(vs, vt);
  src.handling as s -> tgt.handling as t then SpecimenDefinitionSpecimenToLabHandling(s, t);
}

group SpecimenDefinitionSpecimenToLabContainerAdditive(source src, target tgt) extends BackboneElement {
  src.additive as vs -> tgt.additive as vt then string(vs, vt);
}

group SpecimenDefinitionSpecimenToLabHandling(source src, target tgt) extends BackboneElement {
  src.conditionSet as vs -> tgt.conditionSet as vt then string(vs, vt);
  src.tempRange as vs -> tgt.tempRange as vt then string(vs, vt);
  src.maxDuration as vs -> tgt.maxDuration as vt then string(vs, vt);
  src.lightExposure as vs -> tgt.lightExposure as vt then string(vs, vt);
  src.instruction as vs -> tgt.instruction as vt then string(vs, vt);
}

