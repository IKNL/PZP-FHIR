map "http://hl7.org/fhir/StructureMap/Account4to3" = "R4 to R3 Conversion for Account"

uses "http://hl7.org/fhir/StructureDefinition/Account" alias Account as source
uses "http://hl7.org/fhir/3.0/StructureDefinition/Account" alias AccountR3 as target

imports "http://hl7.org/fhir/StructureMap/*4to3"

group Account(source src : AccountR3, target tgt : Account) extends DomainResource <<type+>> {
  src.identifier as vs -> tgt.identifier as vt then Identifier(vs, vt);
  src.status as vs -> tgt.status as vt then code(vs, vt);
  src.type as vs -> tgt.type as vt then string(vs, vt);
  src.name as vs -> tgt.name as vt then string(vs, vt);
  src.subject as vs -> tgt.subject as vt then Reference(vs, vt);
  src.servicePeriod -> tgt.period;
  src.coverage as s -> tgt.coverage as t then AccountCoverage(s, t);
  src.owner as vs -> tgt.owner as vt then string(vs, vt);
  src.description as vs -> tgt.description as vt then markdown(vs, vt);
  src.guarantor as s -> tgt.guarantor as t then AccountGuarantor(s, t);
  src.partOf as vs -> tgt.partOf as vt then string(vs, vt);
}

group AccountCoverage(source src, target tgt) extends BackboneElement {
  src.coverage as vs -> tgt.coverage as vt then string(vs, vt);
  src.priority as vs -> tgt.priority as vt then string(vs, vt);
}

group AccountGuarantor(source src, target tgt) extends BackboneElement {
  src.party as vs -> tgt.party as vt then string(vs, vt);
  src.onHold as vs -> tgt.onHold as vt then string(vs, vt);
  src.period as vs -> tgt.period as vt then string(vs, vt);
}

