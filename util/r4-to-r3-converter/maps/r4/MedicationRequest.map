map "http://hl7.org/fhir/StructureMap/MedicationRequest4to3" = "R4 to R3 Conversion for MedicationRequest"

uses "http://hl7.org/fhir/StructureDefinition/MedicationRequest" alias MedicationRequest as source
uses "http://hl7.org/fhir/3.0/StructureDefinition/MedicationRequest" alias MedicationRequestR3 as target

imports "http://hl7.org/fhir/StructureMap/*4to3"

group MedicationRequest(source src : MedicationRequest, target tgt : MedicationRequestR3) extends DomainResource <<type+>> {
  src.identifier as vs -> tgt.identifier as vt then Identifier(vs, vt);
  src.instantiatesCanonical -> tgt.definition;
  src.basedOn as vs -> tgt.basedOn as vt then string(vs, vt);
  src.groupIdentifier as vs -> tgt.groupIdentifier as vt then string(vs, vt);
  src.status as vs -> tgt.status as vt then code(vs, vt);
  src.intent as vs -> tgt.intent as vt then string(vs, vt);
  src.category as vs -> tgt.category as vt then CodeableConcept(vs, vt);
  src.priority as vs -> tgt.priority as vt then string(vs, vt);
  src.medication : CodeableConcept as vs -> tgt.medication = create('CodeableConcept') as vt then CodeableConcept(vs, vt);
  src.medication : Reference as vs -> tgt.medication = create('Reference') as vt then Reference(vs, vt);
  src.subject as vs -> tgt.subject as vt then Reference(vs, vt);
  src.encounter -> tgt.context;
  src.supportingInformation as vs -> tgt.supportingInformation as vt then string(vs, vt);
  src.authoredOn as vs -> tgt.authoredOn as vt then string(vs, vt);
  src as vs0 where requester.exists() or extension.where(url = '').exists() -> tgt.requester as vt then requester(src, vt) "requester";
  src.recorder as vs -> tgt.recorder as vt then string(vs, vt);
  src.reasonCode as vs -> tgt.reasonCode as vt then string(vs, vt);
  src.reasonReference as vs -> tgt.reasonReference as vt then string(vs, vt);
  src.note as vs -> tgt.note as vt then Annotation(vs, vt);
  src.dosageInstruction as vs -> tgt.dosageInstruction as vt then string(vs, vt);
  src.dispenseRequest as vs0 -> tgt.dispenseRequest as vt0 then dispense(vs0, vt0);
  src.substitution as vs0 -> tgt.substitution as vt0 then subst(vs0, vt0);
  src.priorPrescription as vs -> tgt.priorPrescription as vt then string(vs, vt);
  src.detectedIssue as vs -> tgt.detectedIssue as vt then string(vs, vt);
  src.eventHistory as vs -> tgt.eventHistory as vt then string(vs, vt);
}

group requester(source src, target tgt) {
  src.requester -> tgt.agent;
  src.extension as e where url = 'http://hl7.org/fhir/3.0/StructureDefinition/extension-MedicationRequest.requester.onBehalfOf' then {
    e.value -> tgt.onBehalfOf;
  };
}

group dispense(source src, target tgt) {
  src.validityPeriod as vs -> tgt.validityPeriod as vt then string(vs, vt);
  src.numberOfRepeatsAllowed as vs -> tgt.numberOfRepeatsAllowed as vt then string(vs, vt);
  src.quantity as vs -> tgt.quantity as vt then string(vs, vt);
  src.expectedSupplyDuration as vs -> tgt.expectedSupplyDuration as vt then string(vs, vt);
  src.performer as vs -> tgt.performer as vt then Reference(vs, vt);
}

group subst(source src, target tgt) {
  src.allowed : boolean as vs -> tgt.allowed as vt then boolean(vs, vt);
  src.reason as vs -> tgt.reason as vt then string(vs, vt);
}

