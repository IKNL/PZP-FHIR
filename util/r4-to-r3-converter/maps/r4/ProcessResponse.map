map "http://hl7.org/fhir/StructureMap/ProcessResponse4to3" = "R4 to R3 Conversion for ProcessResponse"

uses "http://hl7.org/fhir/StructureDefinition/ProcessResponse" alias ProcessResponse as source
uses "http://hl7.org/fhir/3.0/StructureDefinition/ProcessResponse" alias ProcessResponseR3 as target

imports "http://hl7.org/fhir/StructureMap/*4to3"

group ProcessResponse(source src : ProcessResponseR3, target tgt : ProcessResponse) extends DomainResource <<type+>> {
  src.identifier as vs -> tgt.identifier as vt then Identifier(vs, vt);
  src.status as vs -> tgt.status as vt then code(vs, vt);
  src.created as vs -> tgt.created as vt then dateTime(vs, vt);
  src.organization as vs -> tgt.organization as vt then string(vs, vt);
  src.request as vs -> tgt.request as vt then string(vs, vt);
  src.outcome as vs -> tgt.outcome as vt then string(vs, vt);
  src.disposition as vs -> tgt.disposition as vt then string(vs, vt);
  src.requestProvider as vs -> tgt.requestProvider as vt then string(vs, vt);
  src.form as vs -> tgt.form as vt then string(vs, vt);
  src.processNote as s -> tgt.processNote as t then ProcessResponseProcessNote(s, t);
  src.error as vs -> tgt.error as vt then string(vs, vt);
  src.communicationRequest as vs -> tgt.communicationRequest as vt then string(vs, vt);
}

group ProcessResponseProcessNote(source src, target tgt) extends BackboneElement {
  src.type as vs -> tgt.type as vt then string(vs, vt);
  src.text as vs -> tgt.text as vt then Narrative(vs, vt);
}

