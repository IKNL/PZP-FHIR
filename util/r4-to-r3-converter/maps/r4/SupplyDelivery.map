map "http://hl7.org/fhir/StructureMap/SupplyDelivery4to3" = "R4 to R3 Conversion for SupplyDelivery"

uses "http://hl7.org/fhir/StructureDefinition/SupplyDelivery" alias SupplyDelivery as source
uses "http://hl7.org/fhir/3.0/StructureDefinition/SupplyDelivery" alias SupplyDeliveryR3 as target

imports "http://hl7.org/fhir/StructureMap/*4to3"

group SupplyDelivery(source src : SupplyDelivery, target tgt : SupplyDeliveryR3) extends DomainResource <<type+>> {
  src.identifier as vs -> tgt.identifier as vt then Identifier(vs, vt);
  src.basedOn as vs -> tgt.basedOn as vt then string(vs, vt);
  src.partOf as vs -> tgt.partOf as vt then string(vs, vt);
  src.status as vs -> tgt.status as vt then code(vs, vt);
  src.patient as vs -> tgt.patient as vt then string(vs, vt);
  src.type as vs -> tgt.type as vt then string(vs, vt);
  src.suppliedItem as vs0 -> tgt.suppliedItem as vt0 then suppliedItem(vs0, vt0);
  src.occurrence : dateTime as vs -> tgt.occurrence = create('dateTime') as vt then dateTime(vs, vt);
  src.occurrence : Period as vs -> tgt.occurrence = create('Period') as vt then Period(vs, vt);
  src.occurrence : Timing as vs -> tgt.occurrence = create('Timing') as vt then Timing(vs, vt);
  src.supplier as vs -> tgt.supplier as vt then string(vs, vt);
  src.destination as vs -> tgt.destination as vt then string(vs, vt);
  src.receiver as vs -> tgt.receiver as vt then string(vs, vt);
}

group suppliedItem(source src, target tgt) extends BackboneElement {
  src.quantity as vs -> tgt.quantity as vt then string(vs, vt);
  src.item : CodeableConcept as vs -> tgt.item = create('CodeableConcept') as vt then CodeableConcept(vs, vt);
  src.item : Reference as vs -> tgt.item = create('Reference') as vt then Reference(vs, vt);
}

