map "http://hl7.org/fhir/StructureMap/Composition4to3" = "R4 to R3 Conversion for Composition"

uses "http://hl7.org/fhir/StructureDefinition/Composition" alias Composition as source
uses "http://hl7.org/fhir/3.0/StructureDefinition/Composition" alias CompositionR3 as target

imports "http://hl7.org/fhir/StructureMap/*4to3"

group Composition(source src : Composition, target tgt : CompositionR3) extends DomainResource <<type+>> {
  src.identifier as vs -> tgt.identifier as vt then Identifier(vs, vt);
  src.status as vs -> tgt.status as vt then code(vs, vt);
  src.type as vs -> tgt.type as vt then string(vs, vt);
  src.category -> tgt.class;
  src.subject as vs -> tgt.subject as vt then Reference(vs, vt);
  src.encounter as vs -> tgt.encounter as vt then Reference(vs, vt);
  src.date as vs -> tgt.date as vt then dateTime(vs, vt);
  src.author as vs -> tgt.author as vt then string(vs, vt);
  src.title as vs -> tgt.title as vt then string(vs, vt);
  src.confidentiality as vs -> tgt.confidentiality as vt then string(vs, vt);
  src.attester as vs0 -> tgt.attester as vt0 then attester(vs0, vt0);
  src.custodian as vs -> tgt.custodian as vt then string(vs, vt);
  src.relatesTo as vs0 -> tgt.relatesTo as vt0 then relatesTo(vs0, vt0);
  src.event as vs0 -> tgt.event as vt0 then event(vs0, vt0);
  src.section as vs0 -> tgt.section as vt0 then section(vs0, vt0);
}

group attester(source src, target tgt) extends BackboneElement {
  src.mode as vs -> tgt.mode as vt then string(vs, vt);
  src.time as vs -> tgt.time as vt then string(vs, vt);
  src.party as vs -> tgt.party as vt then string(vs, vt);
}

group relatesTo(source src, target tgt) extends BackboneElement {
  src.code as vs -> tgt.code as vt then CodeableConcept(vs, vt);
  src.target : Identifier as vs -> tgt.target = create('Identifier') as vt then Identifier(vs, vt);
  src.target : Reference as vs -> tgt.target = create('Reference') as vt then Reference(vs, vt);
}

group event(source src, target tgt) extends BackboneElement {
  src.code as vs -> tgt.code as vt then CodeableConcept(vs, vt);
  src.period as vs -> tgt.period as vt then string(vs, vt);
  src.detail as vs -> tgt.detail as vt then string(vs, vt);
}

group section(source src, target tgt) extends BackboneElement {
  src.title as vs -> tgt.title as vt then string(vs, vt);
  src.code as vs -> tgt.code as vt then CodeableConcept(vs, vt);
  src.text as vs -> tgt.text as vt then Narrative(vs, vt);
  src.mode as vs -> tgt.mode as vt then string(vs, vt);
  src.orderedBy as vs -> tgt.orderedBy as vt then string(vs, vt);
  src.entry as vs -> tgt.entry as vt then string(vs, vt);
  src.emptyReason as vs -> tgt.emptyReason as vt then string(vs, vt);
  src.section as vs0 -> tgt.section as vt0 then section(vs0, vt0);
}

