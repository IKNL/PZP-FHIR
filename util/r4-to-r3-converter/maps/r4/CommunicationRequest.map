map "http://hl7.org/fhir/StructureMap/CommunicationRequest4to3" = "R4 to R3 Conversion for CommunicationRequest"

uses "http://hl7.org/fhir/StructureDefinition/CommunicationRequest" alias CommunicationRequest as source
uses "http://hl7.org/fhir/3.0/StructureDefinition/CommunicationRequest" alias CommunicationRequestR3 as target

imports "http://hl7.org/fhir/StructureMap/*4to3"

group CommunicationRequest(source src : CommunicationRequest, target tgt : CommunicationRequestR3) extends DomainResource <<type+>> {
  src.identifier as vs -> tgt.identifier as vt then Identifier(vs, vt);
  src.basedOn as vs -> tgt.basedOn as vt then string(vs, vt);
  src.replaces as vs -> tgt.replaces as vt then string(vs, vt);
  src.groupIdentifier as vs -> tgt.groupIdentifier as vt then string(vs, vt);
  src.status as vs -> tgt.status as vt then code(vs, vt);
  src.category as vs -> tgt.category as vt then CodeableConcept(vs, vt);
  src.priority as vs -> tgt.priority as vt then string(vs, vt);
  src.medium as vs -> tgt.medium as vt then string(vs, vt);
  src.subject as vs -> tgt.subject as vt then Reference(vs, vt);
  src.recipient as vs -> tgt.recipient as vt then string(vs, vt);
  src.about -> tgt.topic;
  src.encounter -> tgt.context;
  src.payload as s -> tgt.payload as t then payload(s, t);
  src.occurrence : dateTime as s -> tgt.occurrence = create('dateTime') as t then dateTime(s, t);
  src.occurrence : Period as s -> tgt.occurrence = create('Period') as t then Period(s, t);
  src.authoredOn as vs -> tgt.authoredOn as vt then string(vs, vt);
  src.sender as vs -> tgt.sender as vt then string(vs, vt);
  src where requester.exists() or extension.where(url = 'http://hl7.org/fhir/3.0/StructureDefinition/extension-CommunicationRequest.requester.onBehalfOf').exists() -> tgt.requester as vt0 then agent(src, vt0) "requester";
  src.reasonCode as vs -> tgt.reasonCode as vt then string(vs, vt);
  src.reasonReference as vs -> tgt.reasonReference as vt then string(vs, vt);
  src.note as vs -> tgt.note as vt then Annotation(vs, vt);
}

group agent(source src, target tgt) {
  src.requester -> tgt.agent;
  src.extension as e where url = 'http://hl7.org/fhir/3.0/StructureDefinition/extension-CommunicationRequest.requester.onBehalfOf' then {
    e.value -> tgt.onBehalfOf;
  };
}

group payload(source src, target tgt) extends BackboneElement {
  src.content : string as s -> tgt.content = create('string') as t then string(s, t);
  src.content : Attachment as s -> tgt.content = create('Attachment') as t then Attachment(s, t);
  src.content : Reference as s -> tgt.content = create('Reference') as t then Reference(s, t);
}

