map "http://hl7.org/fhir/StructureMap/AllergyIntolerance4to3" = "R4 to R3 Conversion for AllergyIntolerance"

uses "http://hl7.org/fhir/StructureDefinition/AllergyIntolerance" alias AllergyIntolerance as source
uses "http://hl7.org/fhir/3.0/StructureDefinition/AllergyIntolerance" alias AllergyIntoleranceR3 as target

imports "http://hl7.org/fhir/StructureMap/*4to3"

group AllergyIntolerance(source src : AllergyIntolerance, target tgt : AllergyIntoleranceR3) extends DomainResource <<type+>> {
  src.identifier as vs -> tgt.identifier as vt then Identifier(vs, vt);
  src.clinicalStatus as vs then {
    vs.coding as c where system = 'http://terminology.hl7.org/CodeSystem/allergyintolerance-clinical' then {
      c.code -> tgt.clinicalStatus;
    };
  };
  src.verificationStatus as vs then {
    vs.coding as c where system = 'http://terminology.hl7.org/CodeSystem/allergyintolerance-verification' then {
      c.code -> tgt.verificationStatus;
    };
  };
  src.type as vs -> tgt.type as vt then string(vs, vt);
  src.category as vs -> tgt.category as vt then CodeableConcept(vs, vt);
  src.criticality as vs -> tgt.criticality as vt then string(vs, vt);
  src.code as vs -> tgt.code as vt then CodeableConcept(vs, vt);
  src.patient as vs -> tgt.patient as vt then string(vs, vt);
  src.onset : dateTime as vs -> tgt.onset = create('dateTime') as vt then dateTime(vs, vt);
  src.onset : Age as vs -> tgt.onset = create('Age') as vt then Age(vs, vt);
  src.onset : Period as vs -> tgt.onset = create('Period') as vt then Period(vs, vt);
  src.onset : Range as vs -> tgt.onset = create('Range') as vt then Range(vs, vt);
  src.onset : string as vs -> tgt.onset = create('string') as vt then string(vs, vt);
  src.recordedDate -> tgt.assertedDate "assertedDate";
  src.recorder as vs -> tgt.recorder as vt then string(vs, vt);
  src.asserter as vs -> tgt.asserter as vt then string(vs, vt);
  src.lastOccurrence as vs -> tgt.lastOccurrence as vt then string(vs, vt);
  src.note as vs -> tgt.note as vt then Annotation(vs, vt);
  src.reaction as vs0 -> tgt.reaction as vt0 then {
    vs0.substance -> vt0.substance;
    vs0.manifestation -> vt0.manifestation;
    vs0.description -> vt0.description;
    vs0.onset -> vt0.onset;
    vs0.severity -> vt0.severity;
    vs0.exposureRoute -> vt0.exposureRoute;
    vs0.note -> vt0.note;
  };
}

