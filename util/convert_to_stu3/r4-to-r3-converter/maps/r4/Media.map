map "http://hl7.org/fhir/StructureMap/Media4to3" = "R4 to R3 Conversion for Media"

uses "http://hl7.org/fhir/StructureDefinition/Media" alias Media as source
uses "http://hl7.org/fhir/3.0/StructureDefinition/Media" alias MediaR3 as target

imports "http://hl7.org/fhir/StructureMap/*4to3"

group Media(source src : MediaR3, target tgt : Media) extends DomainResource <<type+>> {
  src.identifier as vs -> tgt.identifier as vt then Identifier(vs, vt);
  src.basedOn as vs -> tgt.basedOn as vt then string(vs, vt);
  src.type as vs0 then {
    vs0.coding as c where system = 'http://terminology.hl7.org/CodeSystem/media-type' then {
      c.code -> tgt.type;
    };
  };
  src.modality -> tgt.subtype;
  src.view as vs -> tgt.view as vt then string(vs, vt);
  src.subject as vs -> tgt.subject as vt then Reference(vs, vt);
  src.encounter -> tgt.context;
  src.created : dateTime as vs -> tgt.occurrence = create('dateTime') as vt then dateTime(vs, vt);
  src.created : Period as vs -> tgt.occurrence = create('Period') as vt then Period(vs, vt);
  src.operator as vs -> tgt.operator as vt then string(vs, vt);
  src.reasonCode as vs -> tgt.reasonCode as vt then string(vs, vt);
  src.bodySite as vs -> tgt.bodySite as vt then CodeableConcept(vs, vt);
  src.device as vs -> tgt.device as vt then Reference(vs, vt);
  src.height as vs -> tgt.height as vt then string(vs, vt);
  src.width as vs -> tgt.width as vt then string(vs, vt);
  src.frames as vs -> tgt.frames as vt then string(vs, vt);
  src.duration as vs -> tgt.duration as vt then string(vs, vt);
  src.content as vs -> tgt.content as vt then string(vs, vt);
  src.note as vs -> tgt.note as vt then Annotation(vs, vt);
}

